<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.CommentsMapper" >
	<resultMap id="BaseResultMap" type="com.entity.Comments" >
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="userid" property="userid" jdbcType="INTEGER" />
		<result column="newsid" property="newsid" jdbcType="INTEGER" />
		<result column="replyid" property="replyid" jdbcType="INTEGER" />
		<result column="contects" property="contects" jdbcType="VARCHAR" />
		<result column="time" property="time" jdbcType="VARCHAR" />
		<result column="isdelete" property="isdelete" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause" >
		<where >
			<foreach collection="oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" suffix=")" prefixOverrides="and" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
                  and ${criterion.condition}
								</when>
								<when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue" >
                  and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause" >
		<where >
			<foreach collection="example.oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" suffix=")" prefixOverrides="and" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
                  and ${criterion.condition}
								</when>
								<when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue" >
                  and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List" >
    id, userid, newsid, replyid, contects, time, isdelete
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="com.entity.CommentsExample" >
    select
		<if test="distinct" >
      distinct
		</if>
		<include refid="Base_Column_List" />
    from comments
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null" >
      order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
		<include refid="Base_Column_List" />
    from comments
    where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comments
    where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.entity.CommentsExample" >
    delete from comments
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.entity.Comments" >
    insert into comments (id, userid, newsid, 
      replyid, contects, time, 
      isdelete)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{newsid,jdbcType=INTEGER}, 
      #{replyid,jdbcType=INTEGER}, #{contects,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, 
      #{isdelete,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.entity.Comments" >
    insert into comments
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id != null" >
        id,
			</if>
			<if test="userid != null" >
        userid,
			</if>
			<if test="newsid != null" >
        newsid,
			</if>
			<if test="replyid != null" >
        replyid,
			</if>
			<if test="contects != null" >
        contects,
			</if>
			<if test="time != null" >
        time,
			</if>
			<if test="isdelete != null" >
        isdelete,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id != null" >
        #{id,jdbcType=INTEGER},
			</if>
			<if test="userid != null" >
        #{userid,jdbcType=INTEGER},
			</if>
			<if test="newsid != null" >
        #{newsid,jdbcType=INTEGER},
			</if>
			<if test="replyid != null" >
        #{replyid,jdbcType=INTEGER},
			</if>
			<if test="contects != null" >
        #{contects,jdbcType=VARCHAR},
			</if>
			<if test="time != null" >
        #{time,jdbcType=VARCHAR},
			</if>
			<if test="isdelete != null" >
        #{isdelete,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.entity.CommentsExample" resultType="java.lang.Integer" >
    select count(*) from comments
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map" >
    update comments
		<set >
			<if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
			</if>
			<if test="record.newsid != null" >
        newsid = #{record.newsid,jdbcType=INTEGER},
			</if>
			<if test="record.replyid != null" >
        replyid = #{record.replyid,jdbcType=INTEGER},
			</if>
			<if test="record.contects != null" >
        contects = #{record.contects,jdbcType=VARCHAR},
			</if>
			<if test="record.time != null" >
        time = #{record.time,jdbcType=VARCHAR},
			</if>
			<if test="record.isdelete != null" >
        isdelete = #{record.isdelete,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map" >
    update comments
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      newsid = #{record.newsid,jdbcType=INTEGER},
      replyid = #{record.replyid,jdbcType=INTEGER},
      contects = #{record.contects,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      isdelete = #{record.isdelete,jdbcType=VARCHAR}
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.entity.Comments" >
    update comments
		<set >
			<if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
			</if>
			<if test="newsid != null" >
        newsid = #{newsid,jdbcType=INTEGER},
			</if>
			<if test="replyid != null" >
        replyid = #{replyid,jdbcType=INTEGER},
			</if>
			<if test="contects != null" >
        contects = #{contects,jdbcType=VARCHAR},
			</if>
			<if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
			</if>
			<if test="isdelete != null" >
        isdelete = #{isdelete,jdbcType=VARCHAR},
			</if>
		</set>
    where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.entity.Comments" >
    update comments
    set userid = #{userid,jdbcType=INTEGER},
      newsid = #{newsid,jdbcType=INTEGER},
      replyid = #{replyid,jdbcType=INTEGER},
      contects = #{contects,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      isdelete = #{isdelete,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="findCommentsList" parameterType="com.entity.Comments"
		resultType="com.entity.CommentsCustom">
		select news.title,news.sort,user.username,comments.* from comments join user on comments.userid=user.id join news on comments.newsid=news.id where comments.isdelete=0
		<if test="contects!=null">
		 and contects like '%${contects}%'
		</if>
		<if test="newsid!=null">
			and newsid like '${newsid}'
		</if>
		<if test="userid!=null">
			and userid like '${userid}'
		</if>
		order by time asc
	</select>
	
</mapper>